---
- set_fact:
    kafka_connect_principal: "{{ sasl_scram_users.kafka_connect.principal }}"
  when: kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | normalize_sasl_protocol == 'SCRAM-SHA-256'

- set_fact:
    kafka_connect_principal: "{{ sasl_plain_users.kafka_connect.principal }}"
  when: kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | normalize_sasl_protocol == 'PLAIN'

- set_fact:
    kafka_connect_principal: "{{ kafka_connect_kerberos_principal }}"
    # TODO kerberos isnt working rn
  when: kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | normalize_sasl_protocol == 'GSSAPI'

- set_fact:
    kafka_connect_principal: "{{ common_name }}"
    #keytool -list -v -keystore /var/ssl/private/kafka_broker.keystore.jks -storepass confluentkeystorestorepass | grep Owner -m1| sed -n "s/^.*CN=\(\S*\),.*$/\1/p"
    # m1 being the first line only
    # sed will search string (Owner: CN=kafka_broker, OU=TEST, O=CONFLUENT, L=PaloAlto, ST=Ca, C=US)
    # and capture between CN= and ,
  when:
    - kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] == 'none'
    - ssl_enabled|bool
    - ssl_mutual_auth_enabled|bool

- debug: var=kafka_connect_principal

- name: Create ACLS
  shell: |
    # kafka-cluster
    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --cluster kafka-cluster --operation Create

    # __consumer_offsets
    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --operation Describe --topic __consumer_offsets

    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --operation Read --group {{ kafka_connect['properties']['group.id'] }}

    # config.storage.topic
    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --producer --topic {{ kafka_connect['properties']['config.storage.topic'] }}

    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --operation Read --topic {{ kafka_connect['properties']['config.storage.topic'] }}

    # offset.storage.topic
    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --producer --topic {{ kafka_connect['properties']['offset.storage.topic'] }}

    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --operation Read --topic {{ kafka_connect['properties']['offset.storage.topic'] }}

    # status.storage.topic
    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --producer --topic {{ kafka_connect['properties']['status.storage.topic'] }}

    kafka-acls --authorizer-properties zookeeper.connect=localhost:2181 --add \
        --allow-principal User:{{ kafka_connect_principal }} --allow-host '*' \
        --operation Read --topic {{ kafka_connect['properties']['status.storage.topic'] }}
  delegate_to: "{{ groups['zookeeper'][0] }}"
  run_once: true
