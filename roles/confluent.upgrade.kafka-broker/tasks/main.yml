- name: Get rpm package facts
  package_facts:
    manager: "auto"

## TODO ask about these variables
- name: Set inter.broker.protocol.version
  lineinfile:
    path: "{{kafka.broker.config_file}}"
    regexp: 'inter.broker.protocol.version=.*'
    line: 'inter.broker.protocol.version=2.1'
  when: "packages['{{kafka.old_package_name}}'] is defined"

- name: Set log.message.format.version
  lineinfile:
    path: "{{kafka.broker.config_file}}"
    regexp: 'log.message.format.version=.*'
    line: 'log.message.format.version=2.1'
  when: "packages['{{kafka.old_package_name}}'] is defined"

- name: Create backup directory
  file:
    path: "{{kafka.broker.backup_dir}}"
    state: directory
    mode: 0755

- name: Backup /etc/kafka
  copy:
    src: "{{ item }}"
    dest: "{{kafka.broker.backup_dir}}/{{ item | basename }}"
    remote_src: yes
  with_items:
    - "{{ kafka.broker.config_file }}"
    # - "{{ kafka.broker.systemd_file }}"

- name: Stop kafka
  systemd:
    name: "{{kafka.broker.service_name}}"
    state: stopped
  when: "packages['{{kafka.old_package_name}}'] is defined"

- import_tasks: redhat.yml
  when: ansible_os_family == "RedHat"

# TODO create debian option
# - import_tasks: debian.yml
#   when: ansible_os_family == "Debian"

- name: Restore /etc/kafka
  copy:
    src: "{{kafka.broker.backup_dir}}/{{ item | basename }}"
    dest: "{{ item }}"
    remote_src: yes
  with_items:
    - "{{kafka.broker.config_file}}"
    # - "{{ kafka.broker.systemd_file }}"

- meta: flush_handlers
