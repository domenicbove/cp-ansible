---
- name: Set Principal - Sasl Scram
  set_fact:
    kafka_broker_principal: "{{ sasl_scram_users.kafka_broker.principal }}"
  when: kafka_broker_listeners['external']['sasl_protocol'] | normalize_sasl_protocol == 'SCRAM-SHA-256'

- name: Set Principal - Sasl Plain
  set_fact:
    kafka_broker_principal: "{{ sasl_plain_users.kafka_broker.principal }}"
  when: kafka_broker_listeners['external']['sasl_protocol'] | normalize_sasl_protocol == 'PLAIN'

- name: Set Principal - Sasl Kerberos
  set_fact:
    kafka_broker_principal: "{{ kafka_connect_kerberos_principal }}"
    # TODO kerberos isnt working rn
  when: kafka_broker_listeners['external']['sasl_protocol'] | normalize_sasl_protocol == 'GSSAPI'

# - name: Extract Common Name from Keystore
#   shell: |
#     # Extract certs from keystore, get the subject line, pull out the CN, remove additional line after /
#     openssl pkcs12 -nokeys -in {{kafka_broker_keystore_path}} \
#         -passin pass:{{kafka_broker_keystore_storepass}} \
#         | openssl x509 -noout -subject \
#         | sed -n "s/^.*CN=\(\S*\).*$/\1/p" \
#         | cut -d '/' -f1
#   register: common_name_from_keystore
#   when:
#     - kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] == 'none'
#     - ssl_enabled|bool
#     - ssl_mutual_auth_enabled|bool

- name: Extract Common Name from Keystore - SSL Mutual Auth
  # Extract certs from keystore, get the subject line, pull out the CN, remove additional line after /
  shell: |
    keytool -list -keystore {{kafka_broker_keystore_path}} \
        -storepass {{kafka_broker_keystore_storepass}} -v \
        | grep Owner -m1 \
        | cut -d ":" -f2 \
        | tr -d '[:space:]'
  register: common_name_from_keystore
  when:
    - kafka_broker_listeners['external']['sasl_protocol'] == 'none'
    - ssl_enabled|bool
    - ssl_mutual_auth_enabled|bool

- name: Set Principal - SSL Mutual Auth
  set_fact:
    kafka_broker_principal: "{{ common_name_from_keystore.stdout }}"
  when:
    - kafka_broker_listeners['external']['sasl_protocol'] == 'none'
    - ssl_enabled|bool
    - ssl_mutual_auth_enabled|bool

- name: Normalize User Name
  set_fact:
    kafka_broker_principal: "User:{{ kafka_broker_principal }}"
  when: kafka_broker_principal is defined

- name: No Auth
  set_fact:
    kafka_broker_principal:
  when:
    - kafka_broker_listeners['external']['sasl_protocol'] == 'none'
    - not ssl_enabled|bool

- debug:
    msg: "Principal: {{kafka_broker_principal}}"
